@startuml diagram_9_1_a

class SharkCompany {
    + main(String[] args)
}

enum User {
    OWNER, COMPANY
}

interface BankAccount {
    + deposit(double) : void
    + withdraw(double) : boolean
    + balance() : double
}

class BankAccountImpl {
    - BankAccountImpl(String, double)

    - bank : String
    - balance : double

    + getBank() : String
    + deposit(double amount)
    + withdraw(double amount) : boolean
    + balance() : double
}

class ProxyBankAccount {
    - ProxyBankAccount(String, double)

    - realBank : BankAccountImpl

    + checkAccess() : boolean
    + deposit(double) : void
    + withdraw(double) : boolean
    + balance() : double
}

class Person {
    - Person(String)

    - name : String
    - bankAccount : BankAccount

    + getName() : String
    + getBankAccount() : BankAccount
}

class Employee{
    - Employee(String, double)

    - salary : double

    + getSalary() : double
}

class Company {
    - emps : List<Employee>

    + admitPerson(String, double) : void
    + paySalaries(int) : void
    + employees() : List<Employee>
}


BankAccount <|.. BankAccountImpl : implements
BankAccount <|.. ProxyBankAccount : implements

ProxyBankAccount --> BankAccountImpl : uses
Person --> BankAccount : uses
Company --> Employee : uses 0..*

Employee --|> Person : extends


SharkCompany ..> Company : creates

@enduml
